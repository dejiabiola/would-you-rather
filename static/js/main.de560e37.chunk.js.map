{"version":3,"sources":["actions/authedUser.js","utils/_DATA.js","utils/api.js","components/Login.js","actions/users.js","components/PollTeaser.js","components/Dashboard.js","components/Nav.js","actions/shared.js","actions/questions.js","components/NewPoll.js","components/LeaderBoard.js","components/PollQuestion.js","components/ResultCard.js","components/ResultPage.js","components/NoMatch.js","components/App.js","middleware/logger.js","middleware/index.js","reducers/questions.js","reducers/users.js","reducers/authedUser.js","reducers/index.js","index.js"],"names":["setAuthedUser","id","type","users","sarahedo","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","getQuestions","getUsers","saveQuestionAnswer","qid","answer","_saveQuestionAnswer","Login","state","user","handleSetUser","event","value","setState","handleSignIn","dispatch","props","this","then","receiveUsers","userOptions","onSubmit","className","style","textAlign","Dropdown","placeholder","fluid","selection","options","onChange","required","scrolling","marginBottom","Button","color","disabled","Component","connect","Object","values","map","key","image","avatar","src","PollTeaser","view","answeredQ","unAnsweredQ","questionsToDisplay","undefined","alt","hasLiked","to","answeredIds","keys","filter","includes","sort","a","b","DashBoard","active","showUnansweredQuestions","showAnsweredQuestions","onClick","Navbar","handleSignOut","e","pathname","location","Menu","tabular","size","stackable","Item","as","Link","position","marginRight","Image","circular","verticalAlign","withRouter","handleAddNewQuestion","addNewQuestion","handleSaveQuestionAnswer","addVoteToQuestion","addAnswerToUser","catch","error","console","warn","NewPoll","isLoading","handleOptionOne","target","handleOptionTwo","handleNewPollsubmit","preventDefault","history","push","Segment","border","boxShadow","Dimmer","Loader","Divider","horizontal","LeaderBoard","leaderboardInfo","i","answeredLength","questionsLength","total","length","PollQuestion","selectedOption","answered","handleChange","handleSubmitAnswer","match","params","question_id","idValid","questionData","hasAnswered","checked","htmlFor","questionAsker","ResultCard","highest","option","userVoted","display","justifyContent","fontSize","Rating","icon","defaultRating","maxRating","Progress","percent","percentVote","progress","large","margin","width","noOfVotes","marginTop","toFixed","max","ResultPage","handleClick","floated","NoMatch","App","receiveQuestions","Nav","path","exact","component","Dashboard","logger","store","next","action","group","log","returnValue","getState","groupEnd","applyMiddleware","thunk","combineReducers","createStore","reducers","middleware","ReactDOM","render","document","getElementById"],"mappings":"wbAGO,SAASA,EAAcC,GAC5B,MAAO,CACLC,KALuB,cAMvBD,M,oBCNAE,EAAQ,CACVC,SAAU,CACRH,GAAI,WACJI,KAAM,YACNC,UAAW,4EACXC,QAAS,CACP,yBAA0B,YAC1B,uBAAwB,YACxB,uBAA0B,YAC1B,sBAAyB,aAE3BC,UAAW,CAAC,yBAA0B,2BAExCC,cAAe,CACbR,GAAI,gBACJI,KAAM,iBACNC,UAAW,2EACXC,QAAS,CACP,sBAAyB,YACzB,uBAA0B,aAE5BC,UAAW,CAAC,wBAAyB,0BAEvCE,QAAS,CACPT,GAAI,UACJI,KAAM,WACNC,UAAW,2EACXC,QAAS,CACP,uBAA0B,YAC1B,sBAAyB,YACzB,uBAAwB,aAE1BC,UAAW,CAAC,uBAAwB,4BAIpCA,EAAY,CACd,yBAA0B,CACxBP,GAAI,yBACJU,OAAQ,WACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,YACRC,KAAM,mCAERC,UAAW,CACTF,MAAO,GACPC,KAAM,mCAGV,uBAAwB,CACtBd,GAAI,uBACJU,OAAQ,UACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,sBAERC,UAAW,CACTF,MAAO,CAAC,UAAW,YACnBC,KAAM,0BAGV,uBAA0B,CACxBd,GAAI,yBACJU,OAAQ,WACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,kBAERC,UAAW,CACTF,MAAO,CAAC,YACRC,KAAM,kBAGV,sBAAyB,CACvBd,GAAI,wBACJU,OAAQ,gBACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,4BAERC,UAAW,CACTF,MAAO,CAAC,YACRC,KAAM,4BAGV,sBAAyB,CACvBd,GAAI,wBACJU,OAAQ,gBACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,iBACRC,KAAM,qBAERC,UAAW,CACTF,MAAO,CAAC,WACRC,KAAM,oCAGV,uBAA0B,CACxBd,GAAI,yBACJU,OAAQ,UACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,WACRC,KAAM,oBAERC,UAAW,CACTF,MAAO,CAAC,iBACRC,KAAM,iBAqCL,SAASE,EAAeC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAaJ,EAASP,OACtBY,EAnBV,YAAoE,IAAzCC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,cAAed,EAAU,EAAVA,OACvD,MAAO,CACLV,GAjBKyB,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAAMH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAkB3FjB,UAAWkB,KAAKC,MAChBpB,SACAE,UAAW,CACTC,MAAO,GACPC,KAAMS,GAERR,UAAW,CACTF,MAAO,GACPC,KAAMU,IAQkBO,CAAed,GAEzCe,YAAW,WACTzB,EAAS,eACJA,EADI,eAENe,EAAkBtB,GAAKsB,IAG1BpB,EAAK,eACAA,EADA,eAEFmB,EAFE,eAGEnB,EAAMmB,GAHR,CAIDd,UAAWL,EAAMmB,GAAYd,UAAU0B,OAAO,CAACX,EAAkBtB,SAIrEmB,EAAIG,KACH,QCjKA,SAASY,IACd,ODuHO,IAAIhB,SAAQ,SAACC,EAAKC,GACvBY,YAAW,kBAAMb,EAAI,eAAIZ,MAAa,QCrHnC,SAAS4B,IACd,OD6GO,IAAIjB,SAAQ,SAACC,EAAKC,GACvBY,YAAW,kBAAMb,EAAI,eAAIjB,MAAS,QCvG/B,SAASkC,EAAT,GACL,ODwJK,YAA4D,IAA5Bf,EAA2B,EAA3BA,WAAYgB,EAAe,EAAfA,IAAKC,EAAU,EAAVA,OACtD,OAAO,IAAIpB,SAAQ,SAACC,EAAKC,GACvBY,YAAW,WACT9B,EAAK,eACAA,EADA,eAEFmB,EAFE,eAGEnB,EAAMmB,GAHR,CAIDf,QAAQ,eACHJ,EAAMmB,GAAYf,QADhB,eAEJ+B,EAAMC,QAKb/B,EAAS,eACJA,EADI,eAEN8B,EAFM,eAGF9B,EAAU8B,GAHR,eAIJC,EAJI,eAKA/B,EAAU8B,GAAKC,GALf,CAMHzB,MAAON,EAAU8B,GAAKC,GAAQzB,MAAMoB,OAAO,CAACZ,UAKlDF,MACC,QClLEoB,CAAoB,CAAElB,WADiC,EAA3BA,WACMgB,IADqB,EAAfA,IACDC,OADgB,EAAVA,S,sBCdhDE,E,4MAIJC,MAAQ,CACNC,KAAM,I,EAGRC,cAAgB,SAACC,EAAD,GAAuB,IAAbC,EAAY,EAAZA,MACxB,EAAKC,SAAS,CACZJ,KAAMG,K,EAIVE,aAAe,YAEbC,EADqB,EAAKC,MAAlBD,UACCjD,EAAc,EAAK0C,MAAMC,Q,kEAdlCQ,KAAKD,MAAMD,UCMN,SAACA,GACN,OAAOb,IAAWgB,MAAK,SAAAjD,GACrB8C,EAVN,SAAsB9C,GACpB,MAAO,CACLD,KANyB,gBAOzBC,SAOWkD,CAAalD,Y,+BDShB,IACAmD,EAAgBH,KAAKD,MAArBI,YACR,OAEI,0BAAMC,SAAUJ,KAAKH,aAAcQ,UAAU,kBAC3C,6BACE,wBAAIC,MAAO,CAACC,UAAW,WAAvB,wCACA,yBAAKF,UAAU,cACb,gEACA,kBAACG,EAAA,EAAD,CACEC,YAAY,cACZC,OAAK,EACLC,WAAS,EACTC,QAAST,EACTU,SAAUb,KAAKP,cACfqB,UAAQ,EACRC,WAAS,EACTT,MAAO,CAACU,aAAc,UAExB,kBAACC,EAAA,EAAD,CAAQC,MAAO,QAASR,OAAK,EAACS,SAA8B,KAApBnB,KAAKT,MAAMC,MAAnD,iB,GAtCM4B,aAsELC,mBApBf,YAAqC,IAAVrE,EAAS,EAATA,MACnBmD,EAAcmB,OAAOC,OAAOvE,GAAOwE,KAAI,SAAAhC,GAC3C,MAAO,CACLiC,IAAKjC,EAAK1C,GACVc,KAAM4B,EAAKtC,KACXyC,MAAOH,EAAK1C,GACZ4E,MAAO,CACLC,QAAQ,EACRC,IAAKpC,EAAKrC,eAKhB,MAAO,CACLH,MAAOsE,OAAOC,OAAOvE,GACrBmD,iBAKWkB,CAAyB/B,G,gBErElCuC,G,8KAEM,IAAD,EACyC7B,KAAKD,MAA7C+B,EADD,EACCA,KAAMC,EADP,EACOA,UAAWC,EADlB,EACkBA,YAAahF,EAD/B,EAC+BA,MAChCiF,EAA8B,eAATH,EAAwBE,EAAuB,aAATF,EAAsBC,OAAYG,EACnG,OACE,kBAAC,WAAD,UAC0BA,IAAvBD,GAAoCA,EAAmBT,KAAI,SAAAzD,GAAQ,OAClE,yBAAKsC,UAAU,cAAcoB,IAAK1D,EAASjB,IACzC,yBAAKuD,UAAU,qBACb,wBAAIA,UAAU,iBAAiBrD,EAAMe,EAASP,QAAQN,KAAtD,WAEF,yBAAKmD,UAAU,oBACb,yBAAKA,UAAU,oBACb,yBAAKuB,IAAK5E,EAAMe,EAASP,QAAQL,UAAWgF,IAAG,UAAKnF,EAAMe,EAASP,QAAQN,KAA5B,WAA2CmD,UAAU,kBAEtG,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,sBAAd,oBACA,uBAAGA,UAAU,eAAetC,EAASL,UAAUE,KAA/C,OACCG,EAASqE,SACR,kBAAC,IAAD,CAAMC,GAAE,mBAActE,EAASjB,KAC7B,kBAACmE,EAAA,EAAD,CAAQC,MAAO,OAAQR,OAAK,GAA5B,gBAEF,kBAAC,IAAD,CAAM2B,GAAE,qBAAgBtE,EAASjB,KAC/B,kBAACmE,EAAA,EAAD,CAAQC,MAAO,QAASR,OAAK,GAA7B,yB,GAxBKU,cAwDVC,mBApBf,YAA2D,IAAhCrE,EAA+B,EAA/BA,MAAOmB,EAAwB,EAAxBA,WAAYd,EAAY,EAAZA,UACtCiF,EAAchB,OAAOiB,KAAKvF,EAAMmB,GAAYf,SAYlD,MAAO,CACL2E,UAZwBT,OAAOC,OAAOlE,GAAWmF,QAAO,SAAAzE,GAAQ,OAChEuE,EAAYG,SAAS1E,EAASjB,OAC7B4F,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEnF,UAAYkF,EAAElF,aAAW+D,KAAI,SAAAzD,GAC/C,OAAO,eACFA,EADL,CAEEqE,UAAU,OAQZJ,YAL0BV,OAAOC,OAAOlE,GAAWmF,QAAO,SAAAzE,GAAQ,OACjEuE,EAAYG,SAAS1E,EAASjB,OAC9B4F,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEnF,UAAYkF,EAAElF,aAIhCT,WAIWqE,CAAyBQ,GC1DlCgB,G,mNACJtD,MAAQ,CACNuD,OAAQ,c,EAGVC,wBAA0B,WACxB,EAAKnD,SAAS,CACZkD,OAAQ,gB,EAIZE,sBAAwB,WACtB,EAAKpD,SAAS,CACZkD,OAAQ,c,uDAMV,OACE,kBAAC,WAAD,KACE,yBAAKzC,UAAU,aACb,yBAAKA,UAAU,wBACb,4BACEvD,GAA0B,eAAtBkD,KAAKT,MAAMuD,OAA0B,qBAAkBZ,EAC3De,QAASjD,KAAK+C,yBAFhB,wBAKA,4BACEjG,GAA0B,aAAtBkD,KAAKT,MAAMuD,OAAwB,qBAAkBZ,EACzDe,QAASjD,KAAKgD,uBAFhB,uBAMF,yBAAK3C,UAAU,WACb,kBAAC,EAAD,CAAYyB,KAAM9B,KAAKT,MAAMuD,gB,GAnCjB1B,cA8CTC,gBAAUwB,G,kBC5CnBK,E,4MAEJC,cAAgB,SAACC,GACf,EAAKrD,MAAMD,SPCN,CACL/C,KAXwB,kB,uDOYhB,IACAyC,EAASQ,KAAKD,MAAdP,KACA6D,EAAarD,KAAKD,MAAMuD,SAAxBD,SACR,OACE,kBAAC,WAAD,KACE,kBAACE,EAAA,EAAD,CAAMC,SAAO,EAACC,KAAM,UAAWC,WAAS,GACtC,kBAACH,EAAA,EAAKI,KAAN,CACEC,GAAIC,IACJxB,GAAG,IACHnF,KAAK,OACL4F,OAAqB,MAAbO,IAEV,kBAACE,EAAA,EAAKI,KAAN,CACEC,GAAIC,IACJxB,GAAG,OACHnF,KAAK,WACL4F,OAAqB,SAAbO,IAEV,kBAACE,EAAA,EAAKI,KAAN,CACEC,GAAIC,IACJxB,GAAG,eACHnF,KAAK,cACL4F,OAAqB,iBAAbO,IAEV,kBAACE,EAAA,EAAKA,KAAN,CAAWO,SAAS,SAClB,0BAAMzD,UAAU,QACd,0BAAMC,MAAO,CAACyD,YAAa,QAA3B,WAA4CvE,EAAKtC,MACjD,kBAAC8G,EAAA,EAAD,CACEpC,IAAKpC,EAAKrC,UACVwE,QAAM,EACNsC,UAAU,EACV9B,IAAK3C,EAAKtC,KACVgH,cAAe,SACf7D,UAAW,gBAGf,kBAACkD,EAAA,EAAKI,KAAN,CACEzG,KAAK,SACL+F,QAASjD,KAAKmD,uB,GA5CP/B,aA8DN+C,kBAAW9C,aAP1B,YACE,MAAO,CACL7B,KAF4C,EAArBxC,MAAqB,EAAdmB,eAORkD,CAAyB6B,I,kBCjE5C,SAASkB,EAAqB/F,EAAeC,EAAed,GACjE,OAAO,SAACsC,GACN,ONUyB/B,EMVL,CAAEM,gBAAeC,gBAAed,UNW/CM,EAAcC,IMVlBkC,MAAK,SAAAlC,GJcH,MIbD+B,ECeC,SAAwB/B,GAC7B,MAAO,CACLhB,KAtB4B,mBAuB5BgB,YDlBWsG,CAAetG,IACxB+B,EJaG,CACL/C,KApBgC,uBAqBhCD,IAHG,EIZ0BiB,GJYGjB,GAIhCU,OAJ6C,EAATA,YFLjC,IAAsBO,GMFtB,SAASuG,EAAyBnG,EAAYgB,EAAKC,GACxD,OAAO,SAACU,GAGN,OAFAA,ECcG,SAA2B3B,EAAYgB,EAAKC,GACjD,MAAO,CACLrC,KA5BgC,uBA6BhCoB,aACAgB,MACAC,UDnBSmF,CAAkBpG,EAAYgB,EAAKC,IAC5CU,EJYG,SAAyB3B,EAAYgB,EAAKC,GAC/C,MAAO,CACLrC,KA3B8B,qBA4B9BoB,aACAgB,MACAC,UIjBSoF,CAAgBrG,EAAYgB,EAAKC,IACnCF,EAAmB,CAAEf,aAAYgB,MAAKC,WAC5CqF,OAAM,SAAAC,GAAK,OAAIC,QAAQC,KAAK,0CAA2CF,O,+BEZtEG,E,4MACJtF,MAAQ,CACN7B,UAAW,GACXG,UAAW,GACXiH,WAAW,G,EAGbC,gBAAkB,SAAC3B,GACjB,IAAMzD,EAAQyD,EAAE4B,OAAOrF,MAEvB,EAAKC,SAAS,CACZlC,UAAWiC,K,EAIfsF,gBAAkB,SAAC7B,GACjB,IAAMzD,EAAQyD,EAAE4B,OAAOrF,MAEvB,EAAKC,SAAS,CACZ/B,UAAW8B,K,EAIfuF,oBAAsB,SAAC9B,GACrBA,EAAE+B,iBADyB,MAEM,EAAKpF,MAA9BD,EAFmB,EAEnBA,SAAU3B,EAFS,EAETA,WAFS,EAGM,EAAKoB,MACtCO,EAASsE,EAJkB,EAGnB1G,UAHmB,EAGRG,UACiCM,IACpD,EAAKyB,SAAS,CACZkF,WAAW,IAEbhG,YAAW,WACT,EAAKc,SAAS,CACZlC,UAAW,GACXG,UAAW,GACXiH,WAAW,IAEb,EAAK/E,MAAMqF,QAAQC,KAAK,OACvB,M,uDAQH,OACE,kBAACC,EAAA,EAAD,CAAShF,MAAO,CAACiF,OAAQ,OAAQC,UAAW,SAC1C,kBAACC,EAAA,EAAD,CAAQ3C,QAAiC,IAAzB9C,KAAKT,MAAMuF,WACzB,kBAACY,EAAA,EAAD,CAAQjC,KAAK,MAAMtC,UAAmC,IAAzBnB,KAAKT,MAAMuF,WAAxC,YAGJ,0BAAMzE,UAAU,gBAAgBD,SAAUJ,KAAKkF,qBAC7C,yBAAK7E,UAAU,uBACb,wBAAIA,UAAU,mBAAd,wBAEF,yBAAKA,UAAU,iBACb,qDACA,kDACA,2BACEtD,KAAK,OACLG,KAAK,YACLmD,UAAU,iBACVI,YAAY,qBACZI,SAAUb,KAAK+E,kBAEjB,kBAACY,EAAA,EAAD,CAASC,YAAU,GAAnB,MACA,2BACE7I,KAAK,OACLG,KAAK,YACLmD,UAAU,iBACVI,YAAY,qBACZI,SAAUb,KAAKiF,kBAEjB,kBAAChE,EAAA,EAAD,CACEC,MAAO,QACPuC,KAAM,QACNtC,SAAmC,KAAzBnB,KAAKT,MAAM7B,WAA6C,KAAzBsC,KAAKT,MAAM1B,UACpD6C,OAAK,GAJP,iB,GA1EYU,aAiGPC,mBANf,YACE,MAAO,CACLlD,WAFqC,EAAdA,cAMZkD,CAAyBwD,GClGlCgB,G,8KACM,IACAC,EAAoB9F,KAAKD,MAAzB+F,gBACR,OACE,yBAAKzF,UAAU,0BACb,2CACCyF,EAAgBtE,KAAI,SAAChC,EAAMuG,GAAP,OACnB,yBAAK1F,UAAU,mBAAmBoB,IAAKjC,EAAK1C,IAC1C,yBAAKuD,UAAU,yBACb,yBAAKuB,IAAKpC,EAAKmC,OAAQQ,IAAK3C,EAAKtC,QAEnC,yBAAKmD,UAAU,oBACb,4BAAKb,EAAKtC,MACV,2BAAOmD,UAAU,6BACf,+BACA,4BACE,wBAAIA,UAAU,SAAd,uBACA,4BAAKb,EAAKwG,iBAEZ,4BACE,wBAAI3F,UAAU,SAAd,sBACA,4BAAKb,EAAKyG,qBAKhB,yBAAK5F,UAAU,cACb,yBAAKA,UAAU,QACb,sCACA,0BAAMA,UAAU,WAAW0F,EAAI,IAEjC,yBAAK1F,UAAU,SACb,uCACA,0BAAMA,UAAU,WAAWb,EAAK0G,kB,GAjCtB9E,cAyDXC,mBAdf,YAAqC,IAAVrE,EAAS,EAATA,MAWzB,MAAO,CAAC8I,gBAVgBxE,OAAOC,OAAOvE,GAAOwE,KAAI,SAAAhC,GAAI,MAAK,CACxDmC,OAAQnC,EAAKrC,UACbL,GAAI0C,EAAK1C,GACTI,KAAMsC,EAAKtC,KACX8I,eAAgB1E,OAAOC,OAAO/B,EAAKpC,SAAS+I,OAC5CF,gBAAiBzG,EAAKnC,UAAU8I,OAChCD,MAAO5E,OAAOC,OAAO/B,EAAKpC,SAAS+I,OAAS3G,EAAKnC,UAAU8I,WAE5DzD,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAEsD,MAAQvD,EAAEuD,YAKd7E,CAAyBwE,GCzDlCO,G,mNACJ7G,MAAQ,CACN8G,eAAgB,GAChBC,UAAU,G,EAGZC,aAAe,SAACnD,GACd,EAAKxD,SAAS,CACZyG,eAAgBjD,EAAE4B,OAAOrF,S,EAK7B6G,mBAAqB,SAACpD,GACpBA,EAAE+B,iBACF,IAAM/F,EAAS,EAAKG,MAAM8G,eAFA,EAGO,EAAKtG,MAA9B5B,EAHkB,EAGlBA,YAER2B,EAL0B,EAGNA,UAEXwE,EAAyBnG,EADV,EAAK4B,MAAM0G,MAAMC,OAAjCC,YACmDvH,IAC3D,EAAKQ,SAAS,CACZ0G,UAAU,K,uDAOZ,IAAgB,IAFItG,KAAKD,MAAjB6G,QAGN,OAAO,kBAAC,IAAD,CAAUvE,GAAG,MAJf,MAOuDrC,KAAKD,MAAM8G,aAAjErJ,EAPD,EAOCA,OAAQmE,EAPT,EAOSA,OAAQjE,EAPjB,EAOiBA,UAAWG,EAP5B,EAO4BA,UAAWiJ,EAPvC,EAOuCA,YACtCH,EAAgB3G,KAAKD,MAAM0G,MAAMC,OAAjCC,YARD,EAS8B3G,KAAKT,MAAlC8G,EATD,EASCA,eAER,OAXO,EASiBC,SAGf,kBAAC,IAAD,CAAUjE,GAAE,mBAAcsE,KAG/BG,EACK,kBAAC,IAAD,CAAUzE,GAAG,MAIpB,0BAAMhC,UAAU,cAAcD,SAAUJ,KAAKwG,oBAC3C,yBAAKnG,UAAU,qBACb,wBAAIA,UAAU,iBAAiB7C,EAA/B,WAEF,yBAAK6C,UAAU,oBACb,yBAAKA,UAAU,oBACb,yBAAKuB,IAAKD,EAAQQ,IAAG,UAAK3E,EAAL,WAAsB6C,UAAU,kBAEvD,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,wBAAd,oBACA,2BACEtD,KAAK,QACLG,KAAK,cACLJ,GAAG,YACH6C,MAAM,YACNkB,SAAUb,KAAKuG,aACfQ,QAA4B,cAAnBV,IAEX,2BAAOW,QAAQ,aAAatJ,GAAkB,6BAAM,6BACpD,2BACEX,KAAK,QACLG,KAAK,cACLJ,GAAG,YACH6C,MAAM,YACNkB,SAAUb,KAAKuG,aACfQ,QAA4B,cAAnBV,IAEX,2BAAOW,QAAQ,aAAanJ,GAAkB,6BAAM,6BACpD,kBAACoD,EAAA,EAAD,CAAQC,MAAO,QAASR,OAAK,EAACS,SAAwC,KAA9BnB,KAAKT,MAAM8G,gBAAnD,iB,GAxEejF,cAyGZC,mBAzBf,WAAyDtB,GAAQ,IAAvC/C,EAAsC,EAAtCA,MAAOK,EAA+B,EAA/BA,UAAWc,EAAoB,EAApBA,WAClCwI,EAAgB5G,EAAM0G,MAAMC,OAA5BC,YAER,IADkBrF,OAAOiB,KAAKlF,GAAWoF,SAASkE,GAEhD,MAAO,CACLC,SAAS,GAGb,IAAMK,EAAgBjK,EAAMK,EAAUsJ,GAAanJ,QAUnD,MAAO,CACLqJ,aAVmB,CACnBrJ,OAAQyJ,EAAc/J,KACtByE,OAAQsF,EAAc9J,UACtBO,UAAWL,EAAUsJ,GAAajJ,UAAUE,KAC5CC,UAAWR,EAAUsJ,GAAa9I,UAAUD,KAC5CkJ,YAAaxF,OAAOiB,KAAKvF,EAAMmB,GAAYf,SAASqF,SAASkE,IAM7DxI,aACAyI,SAAS,KAIEvF,CAAyB+E,G,2BCzGlCc,E,uKACM,IAAD,EACiClH,KAAKD,MAArCmG,EADD,EACCA,MAAO/F,EADR,EACQA,YAAagH,EADrB,EACqBA,QAC5B,OACE,kBAAC,WAAD,KACGhH,EAAYqB,KAAI,SAAC4F,EAAQrB,GAAT,OACf,yBAAK1F,UAAU,cAAcoB,IAAKsE,IACV,IAArBqB,EAAOC,WACN,yBAAK/G,MAAO,CAACgH,QAAQ,OAAQC,eAAe,aAC1C,6BACE,0BAAMjH,MAAO,CAACkH,SAAU,WAAxB,aACA,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLC,cAAe,EACfC,UAAW,EACXnE,KAAK,WAKb,2BAAI2D,EAAOxJ,MACX,kBAACiK,EAAA,EAAD,CACEC,QAASV,EAAOW,YAChBC,UAAQ,EACRC,MAAM,OACN3H,MAAO,CAAC4H,OAAQ,EAAGC,MAAM,QACzBjH,MAAOkG,EAAOgB,YAAcjB,EAAU,QAAU,SAElD,uBAAG7G,MAAO,CAACC,UAAU,SAAU8H,UAAU,SAAUjB,EAAOgB,UAA1D,WAA6ElC,Y,GA5BhE9E,aAmEV+C,kBAAW9C,aA/B1B,WAAoDtB,GAAQ,IAIrCrC,EAAWG,EAJPR,EAAgC,EAAhCA,UAAWc,EAAqB,EAArBA,WAE9BJ,EAAWV,EADK0C,EAAM0G,MAAMC,OAA3BC,aAEDT,EAAQnI,EAASL,UAAUC,MAAMwI,OAASpI,EAASF,UAAUF,MAAMwI,OAOzE,MAAO,CACLD,MAAOA,EACP/F,YAAa,CACX,CACEkH,YAAWtJ,EAASL,UAAUC,MAAM8E,SAAStE,GAC7CiK,UAAWrK,EAASL,UAAUC,MAAMwI,OACpC4B,cAAgBhK,EAASL,UAAUC,MAAMwI,OAASD,EAAS,KAAKoC,QAAQ,GACxE1K,KAAMG,EAASL,UAAUE,MAE3B,CACEyJ,YAAWtJ,EAASF,UAAUF,MAAM8E,SAAStE,GAC7CiK,UAAWrK,EAASF,UAAUF,MAAMwI,OACpC4B,cAAgBhK,EAASF,UAAUF,MAAMwI,OAASD,EAAS,KAAKoC,QAAQ,GACxE1K,KAAMG,EAASF,UAAUD,OAG7BuJ,SAtBmBzJ,EAsBEK,EAASL,UAAUC,MAAMwI,OAtBhBtI,EAsBwBE,EAASF,UAAUF,MAAMwI,OArB3EzI,IAAcG,EACT,KAEFU,KAAKgK,IAAI7K,EAAWG,OAuBLwD,CAAyB6F,IClE7CsB,E,4MACJC,YAAc,WACZ,EAAK1I,MAAMqF,QAAQC,KAAK,M,uDAMxB,IAAgB,IAFIrF,KAAKD,MAAjB6G,QAGN,OAAO,kBAAC,IAAD,CAAUvE,GAAG,eAJf,MAOkBrC,KAAKD,MAAtB7C,EAPD,EAOCA,KAAMyE,EAPP,EAOOA,OACd,OACE,0BAAMtB,UAAU,eACd,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,iBAAd,YAAwCnD,IAE1C,yBAAKmD,UAAU,oBACb,yBAAKA,UAAU,oBACb,yBAAKuB,IAAKD,EAAQQ,IAAG,UAAKjF,EAAL,WAAoBmD,UAAU,kBAErD,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,wBAAd,WACA,mDACA,kBAAC,EAAD,MACA,kBAACY,EAAA,EAAD,CAAQwC,KAAK,OAAOiF,QAAQ,QAAQzF,QAASjD,KAAKyI,aAAlD,e,GA1BarH,aAoDVC,mBAhBf,WAA6CtB,GAAQ,IAA3B/C,EAA0B,EAA1BA,MAAOK,EAAmB,EAAnBA,UACxBsJ,EAAe5G,EAAM0G,MAAMC,OAA3BC,YAEP,IADkBrF,OAAOiB,KAAKlF,GAAWoF,SAASkE,GAEhD,MAAO,CACLC,SAAS,GAGb,IAAMpH,EAAOxC,EAAMK,EAAUsJ,GAAanJ,QAC1C,MAAO,CACLV,GAAI0C,EAAK1C,GACTI,KAAMsC,EAAKtC,KACXyE,OAAQnC,EAAKrC,aAIFkE,CAAyBmH,GChDzBG,EATC,SAAA5I,GACd,OACE,yBAAKO,MAAO,CAACC,UAAW,WACtB,+DACA,qFCUAqI,G,kLAEF5I,KAAKD,MAAMD,UPHN,SAACA,GACN,OAAOd,IACNiB,MAAK,SAAA5C,GACJyC,EAXN,SAA0BzC,GACxB,MAAO,CACLN,KAP6B,oBAQ7BM,aAQWwL,CAAiBxL,Y,+BOGpB,IACAc,EAAe6B,KAAKD,MAApB5B,WAER,OACE,kBAAC,IAAD,KACE,kBAAC,WAAD,KACkB,OAAfA,EACC,kBAAC,EAAD,MACA,6BACE,kBAAC2K,EAAD,MACA,yBAAKzI,UAAU,YACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0I,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,OAAOE,UAAWpE,IAC9B,kBAAC,IAAD,CAAOkE,KAAK,eAAeE,UAAWpD,IACtC,kBAAC,IAAD,CAAOkD,KAAK,0BAA0BE,UAAW7C,IACjD,kBAAC,IAAD,CAAO2C,KAAK,wBAAwBE,UAAWT,IAC/C,kBAAC,IAAD,CAAOO,KAAK,aAAaE,UAAWN,IACpC,kBAAC,IAAD,CAAOM,UAAWN,a,GAvBlBvH,aAyCHC,oBANf,YACE,MAAO,CACLlD,WAFsC,EAAdA,cAMbkD,CAAyBuH,I,mBC/CzBO,GAVA,SAACC,GAAD,OAAW,SAACC,GAAD,OAAU,SAACC,GACnC3E,QAAQ4E,MAAMD,EAAOvM,MACrB4H,QAAQ6E,IAAI,cAAeF,GAC3B,IAAMG,EAAcJ,EAAKC,GAGzB,OAFA3E,QAAQ6E,IAAI,iBAAkBJ,EAAMM,YACpC/E,QAAQgF,WACDF,KCAMG,gBACbC,KACAV,IC2Ba9L,OA/Bf,WAAwC,IAArBkC,EAAoB,uDAAZ,GAAI+J,EAAQ,uCACrC,OAAOA,EAAOvM,MACZ,IVJ6B,oBUK3B,OAAO,eACFwC,EADL,GAEK+J,EAAOjM,WAEd,IVR4B,mBUQ5B,IACUU,EAAauL,EAAbvL,SACR,OAAO,eACFwB,EADL,eAEGxB,EAASjB,GAAKiB,IAEnB,IVbgC,uBUahC,IACUI,EAA4BmL,EAA5BnL,WAAYgB,EAAgBmK,EAAhBnK,IAAKC,EAAWkK,EAAXlK,OACzB,OAAO,eACFG,EADL,eAEGJ,EAFH,eAGOI,EAAMJ,GAHb,eAIKC,EAJL,eAKSG,EAAMJ,GAAKC,GALpB,CAMMzB,MAAO4B,EAAMJ,GAAKC,GAAQzB,MAAMoB,OAAO,CAACZ,UAIhD,QACE,OAAOoB,ICQEvC,OAlCf,WAAoC,IAArBuC,EAAoB,uDAAZ,GAAI+J,EAAQ,uCACjC,OAAOA,EAAOvM,MACZ,IhBJyB,gBgBKvB,OAAO,eACFwC,EADL,GAEK+J,EAAOtM,OAEd,IhBRgC,uBgBQhC,IACUF,EAAewM,EAAfxM,GAAIU,EAAW8L,EAAX9L,OACZ,OAAO,eACF+B,EADL,eAEG/B,EAFH,eAGO+B,EAAM/B,GAHb,CAIIH,UAAWkC,EAAM/B,GAAQH,UAAU0B,OAAO,CAACjC,QAGjD,IhBhB8B,qBgBgB9B,IACUqB,EAA4BmL,EAA5BnL,WAAYgB,EAAgBmK,EAAhBnK,IAAKC,EAAWkK,EAAXlK,OACzB,OAAO,eACFG,EADL,eAEGpB,EAFH,eAGOoB,EAAMpB,GAHb,CAIIf,QAAQ,eACHmC,EAAMpB,GAAYf,QADhB,eAEJ+B,EAAM,CAACC,SAIhB,QACE,OAAOG,ICfEpB,OAZf,WAA2C,IAAvBoB,EAAsB,uDAAd,KAAM+J,EAAQ,uCACxC,OAAOA,EAAOvM,MACZ,IrBRuB,cqBSrB,OAAOuM,EAAOxM,GAChB,IrBTwB,eqBUtB,OAAO,KACT,QACE,OAAOyC,ICREuK,gBAAgB,CAC7BzM,aACAL,SACAmB,gBCEIiL,I,OAAQW,aAAYC,GAAUC,KAGpCC,IAASC,OACL,kBAAC,IAAD,CAAUf,MAAOA,IACf,kBAAC,GAAD,OAGJgB,SAASC,eAAe,W","file":"static/js/main.de560e37.chunk.js","sourcesContent":["export const AUTHED_USER = \"AUTHED_USER\"\nexport const LOG_USER_OUT = \"LOG_USER_OUT\"\n\nexport function setAuthedUser(id) {\n  return {\n    type: AUTHED_USER,\n    id\n  }\n}\n\nexport function logOutUser() {\n  return {\n    type: LOG_USER_OUT\n  }\n}","let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: 'https://res.cloudinary.com/dejiabiola/image/upload/v1588060313/girl-1.svg',\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: 'https://res.cloudinary.com/dejiabiola/image/upload/v1588060313/man-2.svg',\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'https://res.cloudinary.com/dejiabiola/image/upload/v1588060315/man-3.svg',\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n      \n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n","import {\n  _getUsers,\n  _getQuestions,\n  _saveQuestion,\n  _saveQuestionAnswer\n} from './_DATA'\n\n\nexport function getQuestions() {\n  return _getQuestions()\n}\n\nexport function getUsers() {\n  return _getUsers()\n}\n\nexport function saveQuestion(question) {\n  return _saveQuestion(question)\n}\n\nexport function saveQuestionAnswer({ authedUser, qid, answer }) {\n  return _saveQuestionAnswer({ authedUser, qid, answer })\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setAuthedUser } from '../actions/authedUser'\nimport { getAllUsers } from '../actions/users'\nimport { Dropdown, Button } from 'semantic-ui-react'\n\nclass Login extends Component {\n  componentDidMount() {\n    this.props.dispatch(getAllUsers())\n  }\n  state = {\n    user: ''\n  }\n\n  handleSetUser = (event, { value }) => {\n    this.setState({\n      user: value\n    })\n  }\n\n  handleSignIn = () => {\n    const { dispatch } = this.props;\n    dispatch(setAuthedUser(this.state.user))\n  }\n\n  render() {\n    const { userOptions } = this.props;\n    return (\n      \n        <form onSubmit={this.handleSignIn} className=\"login-form-div\">\n          <div>\n            <h2 style={{textAlign: 'center'}}>Welcome to the Would You Rather Game</h2>\n            <div className='login-info'>\n              <p>Please select a user to continue:</p>\n              <Dropdown\n                placeholder='Select User'\n                fluid\n                selection\n                options={userOptions}\n                onChange={this.handleSetUser}\n                required\n                scrolling\n                style={{marginBottom: '30px'}}\n              />\n              <Button color={'green'} fluid disabled={this.state.user === ''}>Log In</Button>\n            </div>\n          </div>\n        </form>\n      \n      \n    )\n  }\n}\n\n\n\nfunction mapStateToProps({ users }) {\n  const userOptions = Object.values(users).map(user => {\n    return {\n      key: user.id,\n      text: user.name,\n      value: user.id,\n      image: {\n        avatar: true,\n        src: user.avatarURL\n      }\n    }\n  })\n\n  return {\n    users: Object.values(users),\n    userOptions\n  }\n}\n\n\nexport default connect(mapStateToProps)(Login)","import { getUsers } from \"../utils/api\"\n\nexport const RECEIVE_USERS = \"RECEIVE_USERS\"\nexport const ADD_QUESTION_TO_USER = \"ADD_QUESTION_TO_USER\"\nexport const ADD_ANSWER_TO_USER = \"ADD_ANSWER_TO_USER\"\n\nfunction receiveUsers(users) {\n  return {\n    type: RECEIVE_USERS,\n    users\n  }\n}\n\nexport function getAllUsers() {\n  return (dispatch) => {\n    return getUsers().then(users => {\n      dispatch(receiveUsers(users))\n    })\n  }\n}\n\nexport function addQuestionToUser({ id, author}) {\n  return {\n    type: ADD_QUESTION_TO_USER,\n    id,\n    author\n  }\n}\n\nexport function addAnswerToUser(authedUser, qid, answer) {\n  return {\n    type: ADD_ANSWER_TO_USER,\n    authedUser,\n    qid,\n    answer\n  }\n}","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport '../styles/PollTeaser.scss'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'semantic-ui-react'\n\n\nclass PollTeaser extends Component {\n  \n  render() {\n    const { view, answeredQ, unAnsweredQ, users } = this.props;\n    const questionsToDisplay = view === 'unAnswered' ? unAnsweredQ : view === 'answered' ? answeredQ : undefined\n    return (\n      <Fragment>\n        {questionsToDisplay !== undefined && questionsToDisplay.map(question => (\n          <div className=\"teaser-body\" key={question.id}>\n            <div className=\"teaser-header-div\">\n              <h3 className=\"teaser-header\">{users[question.author].name} asks:</h3>\n            </div>\n            <div className=\"teaser-inner-div\">\n              <div className=\"teaser-image-div\">\n                <img src={users[question.author].avatarURL} alt={`${users[question.author].name} avatar`} className=\"teaser-image\"/>\n              </div>\n              <div className=\"teaser-info-div\">\n                <h3 className=\"teaser-info-header\">Would you rather</h3>\n                <p className=\"teaser-info\">{question.optionOne.text}...</p>\n                {question.hasLiked ?\n                  <Link to={`/results/${question.id}`}>\n                    <Button color={'teal'} fluid>View Result</Button>\n                  </Link> :\n                  <Link to={`/questions/${question.id}`}>\n                    <Button color={'green'} fluid>View Poll</Button>\n                  </Link>\n                }\n              </div>\n            </div>\n          </div>\n        ))}\n      </Fragment>    \n    )\n  }\n}\n\nfunction mapStateToProps({ users, authedUser, questions}) {\n  const answeredIds = Object.keys(users[authedUser].answers);\n  const answeredQuestions = Object.values(questions).filter(question => (\n    answeredIds.includes(question.id)\n  )).sort((a, b) => b.timestamp - a.timestamp).map(question => {\n    return {\n      ...question,\n      hasLiked: true\n    }\n  })\n  const unansweredQuestions = Object.values(questions).filter(question => (\n    !answeredIds.includes(question.id)\n  )).sort((a, b) => b.timestamp - a.timestamp)\n  return {\n    answeredQ: answeredQuestions,\n    unAnsweredQ: unansweredQuestions,\n    users\n  }\n}\n\nexport default connect(mapStateToProps)(PollTeaser)","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport PollTeaser from './PollTeaser'\nimport '../styles/Dashboard.scss'\n\nclass DashBoard extends Component {\n  state = {\n    active: 'unAnswered'\n  }\n\n  showUnansweredQuestions = () => {\n    this.setState({\n      active: 'unAnswered'\n    })\n  }\n\n  showAnsweredQuestions = () => {\n    this.setState({\n      active: 'answered'\n    })\n  }\n\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"dashboard\">\n          <div className=\"dashboard-button-div\">\n            <button \n              id={this.state.active === 'unAnswered' ? 'active-button' : undefined}\n              onClick={this.showUnansweredQuestions}>\n              Unanswered Questions\n            </button>\n            <button \n              id={this.state.active === 'answered' ? 'active-button' : undefined}\n              onClick={this.showAnsweredQuestions}>\n              Answered Questions\n            </button>\n          </div>\n          <div className=\"teasers\">\n            <PollTeaser view={this.state.active}/>\n          </div>\n        </div>\n        \n      </Fragment>\n    )\n  }\n}\n\n\n\nexport default connect()(DashBoard)","import React, { Component, Fragment } from 'react'\nimport { Menu, Image } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport { logOutUser } from '../actions/authedUser'\n\n\nclass Navbar extends Component {\n  \n  handleSignOut = (e) => {\n    this.props.dispatch(logOutUser())\n  }\n\n  render() {\n    const { user } = this.props\n    const { pathname } = this.props.location\n    return (\n      <Fragment>\n        <Menu tabular size={\"massive\"} stackable>\n          <Menu.Item\n            as={Link}\n            to=\"/\"\n            name='home'\n            active={pathname === '/'}\n          />\n          <Menu.Item\n            as={Link}\n            to=\"/add\"\n            name='new poll'\n            active={pathname === '/add'}\n          />\n          <Menu.Item\n            as={Link}\n            to='/leaderboard'\n            name='leaderboard' \n            active={pathname === '/leaderboard'}\n          />\n          <Menu.Menu position='right'>\n            <span className=\"span\">\n              <span style={{marginRight: '2px'}}>Welcome {user.name}</span>\n              <Image\n                src={user.avatarURL}\n                avatar\n                circular={true}\n                alt={user.name}\n                verticalAlign={\"bottom\"}\n                className={\"nav-avatar\"}\n              />\n            </span>\n            <Menu.Item\n              name='logout'\n              onClick={this.handleSignOut}\n            />\n          </Menu.Menu>\n        </Menu>\n      </Fragment>\n    )\n  }\n}\n\n\n\nfunction mapStateToProps({ users, authedUser }) {\n  return {\n    user: users[authedUser],\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(Navbar))","import { addQuestionToUser, addAnswerToUser } from \"./users\"\nimport { addNewQuestion, addVoteToQuestion } from \"./questions\"\nimport { saveQuestion, saveQuestionAnswer } from '../utils/api' \n\nexport function handleAddNewQuestion(optionOneText, optionTwoText, author) {\n  return (dispatch) => {\n    return saveQuestion({ optionOneText, optionTwoText, author })\n    .then(question => {\n      dispatch(addNewQuestion(question))\n      dispatch(addQuestionToUser(question))\n    })\n  }\n}\n\nexport function handleSaveQuestionAnswer(authedUser, qid, answer) {\n  return (dispatch) => {\n    dispatch(addVoteToQuestion(authedUser, qid, answer))\n    dispatch(addAnswerToUser(authedUser, qid, answer))\n    return saveQuestionAnswer({ authedUser, qid, answer })\n    .catch(error => console.warn('There was an error in submitting result', error))\n  }\n}","import { getQuestions } from \"../utils/api\"\n\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\nexport const ADD_NEW_QUESTION = 'ADD_NEW_QUESTION'\nexport const ADD_VOTE_TO_QUESTION = 'ADD_VOTE_TO_QUESTION'\n\n\nfunction receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  }\n}\n\nexport function getAllQuestions() {\n  return (dispatch) => {\n    return getQuestions()\n    .then(questions => {\n      dispatch(receiveQuestions(questions))\n    })\n  }\n}\n\nexport function addNewQuestion(question) {\n  return {\n    type: ADD_NEW_QUESTION,\n    question\n  }\n}\n\nexport function addVoteToQuestion(authedUser, qid, answer) {\n  return {\n    type: ADD_VOTE_TO_QUESTION,\n    authedUser,\n    qid,\n    answer\n  }\n}\n","import React, { Component } from 'react'\nimport '../styles/NewPoll.scss'\nimport { connect } from 'react-redux'\nimport { Divider } from 'semantic-ui-react'\nimport { handleAddNewQuestion } from '../actions/shared'\nimport { Button, Segment, Dimmer, Loader } from 'semantic-ui-react'\n\nclass NewPoll extends Component {\n  state = {\n    optionOne: '',\n    optionTwo: '',\n    isLoading: false\n  }\n\n  handleOptionOne = (e) => {\n    const value = e.target.value\n\n    this.setState({\n      optionOne: value\n    })\n  }\n\n  handleOptionTwo = (e) => {\n    const value = e.target.value\n\n    this.setState({\n      optionTwo: value\n    })\n  }\n\n  handleNewPollsubmit = (e) => {\n    e.preventDefault();\n    const { dispatch, authedUser } = this.props;\n    const { optionOne, optionTwo } = this.state;\n    dispatch(handleAddNewQuestion(optionOne, optionTwo, authedUser))\n    this.setState({\n      isLoading: true\n    })\n    setTimeout(() => {\n      this.setState({\n        optionOne: '',\n        optionTwo: '',\n        isLoading: false\n      })\n      this.props.history.push('/');\n    }, 1000)\n    \n    \n  } \n\n  render() {\n  \n\n    return (\n      <Segment style={{border: 'none', boxShadow: 'none'}}>\n        <Dimmer active={this.state.isLoading === true}>\n          <Loader size='big' disabled={this.state.isLoading === false}>Loading</Loader>\n        </Dimmer>\n\n      <form className=\"new-poll-body\" onSubmit={this.handleNewPollsubmit}>\n        <div className=\"new-poll-header-div\">\n          <h2 className=\"new-poll-header\">Create New Question</h2>\n        </div>\n        <div className=\"new-poll-info\">\n          <h4>Complete the question</h4>\n          <p>Would you rather...</p>\n          <input \n            type=\"text\" \n            name=\"optionOne\" \n            className=\"new-poll-input\" \n            placeholder=\"Enter option one..\"\n            onChange={this.handleOptionOne}\n            />\n          <Divider horizontal>Or</Divider>\n          <input \n            type=\"text\" \n            name=\"optionTwo\" \n            className=\"new-poll-input\" \n            placeholder=\"Enter option two..\"\n            onChange={this.handleOptionTwo}\n            />\n          <Button \n            color={'green'} \n            size={'large'} \n            disabled={this.state.optionOne === '' || this.state.optionTwo === ''}\n            fluid\n            >\n            Submit\n          </Button>\n        </div>\n      </form>  \n      </Segment>\n    )\n  }\n}\n\n\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    authedUser\n  }\n}\n\nexport default connect(mapStateToProps)(NewPoll)","import React, { Component } from 'react'\nimport '../styles/LeaderBoard.scss'\nimport { connect } from 'react-redux'\n\n\n\nclass LeaderBoard extends Component {\n  render() {\n    const { leaderboardInfo } = this.props\n    return (\n      <div className=\"leaderboard-outer-body\">\n        <h1>LeaderBoard</h1>\n        {leaderboardInfo.map((user, i) => (\n          <div className=\"leaderboard-card\" key={user.id}>\n            <div className=\"leaderboard-image-div\">\n              <img src={user.avatar} alt={user.name}/>\n            </div>\n            <div className=\"leaderboard-info\">\n              <h2>{user.name}</h2>\n              <table className=\"lb-answered-questions-div\">\n                <tbody>\n                <tr>\n                  <td className=\"title\">Answered Questions:</td>\n                  <td>{user.answeredLength}</td>\n                </tr>\n                <tr>\n                  <td className=\"title\">Created Questions:</td>\n                  <td>{user.questionsLength}</td>\n                </tr>\n                </tbody>\n              </table>\n            </div>\n            <div className=\"score-rank\">\n              <div className=\"rank\">\n                <span>Rank</span>\n                <span className=\"rounded\">{i + 1}</span>\n              </div>\n              <div className=\"score\">\n                <span>Score</span>\n                <span className=\"rounded\">{user.total}</span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ users }) {\n  const leaderboardInfo = Object.values(users).map(user => ({\n    avatar: user.avatarURL,\n    id: user.id,\n    name: user.name,\n    answeredLength: Object.values(user.answers).length,\n    questionsLength: user.questions.length,\n    total: Object.values(user.answers).length + user.questions.length\n  }))\n  .sort((a,b) => b.total - a.total)\n\n  return {leaderboardInfo}\n}\n\nexport default connect(mapStateToProps)(LeaderBoard)","import React, { Component } from 'react'\nimport '../styles/PollQuestion.scss'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { handleSaveQuestionAnswer } from '../actions/shared'\nimport { Button } from 'semantic-ui-react'\nclass PollQuestion extends Component {\n  state = {\n    selectedOption: '',\n    answered: false\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      selectedOption: e.target.value\n    })\n\n  }\n\n  handleSubmitAnswer = (e) => {\n    e.preventDefault()\n    const answer = this.state.selectedOption\n    const { authedUser, dispatch } = this.props \n    const { question_id } = this.props.match.params\n    dispatch(handleSaveQuestionAnswer(authedUser, question_id, answer))\n    this.setState({\n      answered: true\n    })\n  }\n\n  render() {\n    const { idValid } = this.props;\n\n    if (idValid === false) {\n      return <Redirect to='/' />\n    }\n\n    const { author, avatar, optionOne, optionTwo, hasAnswered } = this.props.questionData;\n    const { question_id } = this.props.match.params;\n    const { selectedOption, answered } = this.state;\n\n    if (answered) {\n      return <Redirect to={`/results/${question_id}`} />\n    }\n\n    if (hasAnswered) {\n      return <Redirect to='/' />\n    }\n\n    return (\n      <form className=\"teaser-body\" onSubmit={this.handleSubmitAnswer}>\n        <div className=\"teaser-header-div\">\n          <h2 className=\"teaser-header\">{author} asks:</h2>\n        </div>\n        <div className=\"teaser-inner-div\">\n          <div className=\"teaser-image-div\">\n            <img src={avatar} alt={`${author} avatar`} className=\"teaser-image\"/>\n          </div>\n          <div className=\"question-info-div\">\n            <h3 className=\"question-info-header\">Would You Rather</h3>\n            <input \n              type=\"radio\" \n              name=\"poll-answer\" \n              id=\"optionOne\" \n              value=\"optionOne\" \n              onChange={this.handleChange}\n              checked={selectedOption === 'optionOne'}\n              />\n            <label htmlFor=\"optionOne\">{optionOne}</label><br /><br />\n            <input \n              type=\"radio\" \n              name=\"poll-answer\" \n              id=\"optionTwo\" \n              value=\"optionTwo\" \n              onChange={this.handleChange}\n              checked={selectedOption === 'optionTwo'}\n            />\n            <label htmlFor=\"optionTwo\">{optionTwo}</label><br /><br />\n            <Button color={'green'} fluid disabled={this.state.selectedOption === ''}>Submit</Button>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nfunction mapStateToProps({users, questions, authedUser}, props) {\n  const { question_id } = props.match.params\n  const isIdValid = Object.keys(questions).includes(question_id)\n  if (!isIdValid) {\n    return {\n      idValid: false\n    }\n  }\n  const questionAsker = users[questions[question_id].author]\n  const questionData = {\n    author: questionAsker.name,\n    avatar: questionAsker.avatarURL,\n    optionOne: questions[question_id].optionOne.text,\n    optionTwo: questions[question_id].optionTwo.text,\n    hasAnswered: Object.keys(users[authedUser].answers).includes(question_id)\n  }\n\n\n  return {\n    questionData,\n    authedUser,\n    idValid: true\n  }\n}\n\nexport default connect(mapStateToProps)(PollQuestion)\n","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Progress } from 'semantic-ui-react'\nimport { withRouter } from 'react-router-dom'\nimport { Rating } from 'semantic-ui-react'\n\nclass ResultCard extends Component { \n  render() {\n    const { total, userOptions, highest } = this.props;\n    return (\n      <Fragment>\n        {userOptions.map((option, i) => (\n          <div className='result-card' key={i}>\n            {option.userVoted === true && (\n              <div style={{display:'flex', justifyContent:'flex-end'}}>\n                <div>\n                  <span style={{fontSize: '1.5rem'}}>Your vote</span>\n                  <Rating \n                    icon='heart' \n                    defaultRating={1} \n                    maxRating={1} \n                    size='huge' \n                    />\n                </div>\n              </div>\n            )}\n            <p>{option.text}</p>\n            <Progress \n              percent={option.percentVote} \n              progress \n              large=\"true\" \n              style={{margin: 0, width:'100%'}}\n              color={option.noOfVotes === highest ? 'green' : 'grey'}\n              />\n            <p style={{textAlign:'center', marginTop:'10px'}}>{option.noOfVotes} out of {total}</p>\n          </div>\n        ))}\n      </Fragment>\n    )\n  }\n}\n\nfunction mapStateToProps({ questions, authedUser }, props) {\n  const {question_id} = props.match.params;\n  const question = questions[question_id];\n  const total = question.optionOne.votes.length + question.optionTwo.votes.length;\n  const biggestVote = (optionOne, optionTwo) => {\n    if (optionOne === optionTwo) {\n      return null;\n    }\n    return Math.max(optionOne, optionTwo)\n  }\n  return {\n    total: total,\n    userOptions: [\n      {\n        userVoted: question.optionOne.votes.includes(authedUser) ? true : false,\n        noOfVotes: question.optionOne.votes.length,\n        percentVote: (+(question.optionOne.votes.length / total) * 100).toFixed(1),\n        text: question.optionOne.text\n      },\n      {\n        userVoted: question.optionTwo.votes.includes(authedUser) ? true : false,\n        noOfVotes: question.optionTwo.votes.length,\n        percentVote: (+(question.optionTwo.votes.length / total) * 100).toFixed(1),\n        text: question.optionTwo.text\n      }\n    ],\n    highest: biggestVote(question.optionOne.votes.length, question.optionTwo.votes.length)\n  }\n}\n\n\nexport default withRouter(connect(mapStateToProps)(ResultCard))","import React, { Component } from 'react'\nimport '../styles/ResultPage.scss'\nimport { connect } from 'react-redux'\nimport ResultCard from './ResultCard'\nimport { Button } from 'semantic-ui-react'\nimport { Redirect } from 'react-router-dom'\n\nclass ResultPage extends Component {\n  handleClick = () => {\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { idValid } = this.props\n\n    if (idValid === false) {\n      return <Redirect to='/unknownId' />\n    }\n\n    const { name, avatar } = this.props\n    return (\n      <form className=\"teaser-body\">\n        <div className=\"teaser-header-div\">\n          <h2 className=\"teaser-header\">Asked by {name}</h2>\n        </div>\n        <div className=\"teaser-inner-div\">\n          <div className=\"result-image-div\">\n            <img src={avatar} alt={`${name} avatar`} className=\"teaser-image\"/>\n          </div>\n          <div className=\"question-info-div\">\n            <h3 className=\"question-info-header\">Results</h3>\n            <h5>Would you rather...</h5>\n            <ResultCard />\n            <Button size=\"tiny\" floated=\"right\" onClick={this.handleClick}>\n              Back\n            </Button>\n          </div>\n        </div>\n      </form>\n    )\n  }\n} \n\nfunction mapStateToProps({users, questions}, props) {\n  const {question_id} = props.match.params\n  const isIdValid = Object.keys(questions).includes(question_id)\n  if (!isIdValid) {\n    return {\n      idValid: false\n    }\n  }\n  const user = users[questions[question_id].author]\n  return {\n    id: user.id,\n    name: user.name,\n    avatar: user.avatarURL\n  }\n}\n\nexport default connect(mapStateToProps)(ResultPage)","import React from 'react'\n\nconst NoMatch = props => {\n  return (\n    <div style={{textAlign: 'center'}}>\n      <h1>Oops... There's something wrong</h1>\n      <p>It seems the page you are looking for does not exist</p>\n    </div>\n  )\n}\n\nexport default NoMatch","import React, { Component, Fragment } from 'react'\nimport '../styles/App.css'\nimport { connect } from 'react-redux'\nimport Login from './Login'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Dashboard from './Dashboard'\nimport NavBar from './Nav'\nimport NewPoll from './NewPoll'\nimport LeaderBoard from './LeaderBoard'\nimport PollQuestion from './PollQuestion'\nimport ResultPage from './ResultPage'\nimport NoMatch from './NoMatch'\nimport { getAllQuestions } from '../actions/questions'\n\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(getAllQuestions())\n  }\n\n  render() {\n    const { authedUser } = this.props\n\n    return (\n      <Router>\n        <Fragment>\n          {authedUser === null ?\n            <Login /> :\n            <div>\n              <NavBar />\n              <div className=\"app-body\">\n                <Switch>\n                  <Route path='/' exact component={Dashboard} />\n                  <Route path='/add' component={NewPoll} />\n                  <Route path=\"/leaderboard\" component={LeaderBoard} />\n                  <Route path='/questions/:question_id' component={PollQuestion} />\n                  <Route path='/results/:question_id' component={ResultPage} />\n                  <Route path=\"/unknownId\" component={NoMatch} />\n                  <Route component={NoMatch} />\n                </Switch>\n              </div>\n            </div>\n          } \n        </Fragment>\n      </Router>\n    );\n  }\n}\n\n\nfunction mapStateToProps ({ authedUser }) {\n  return {\n    authedUser,\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","const logger = (store) => (next) => (action) => {\n  console.group(action.type); \n  console.log(\"The action:\", action);\n  const returnValue = next(action);\n  console.log(\"The new state:\", store.getState());\n  console.groupEnd();\n  return returnValue;\n}\n\n\nexport default logger","import { applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"./logger\";\n\n\n\nexport default applyMiddleware(\n  thunk,\n  logger\n)","import { RECEIVE_QUESTIONS, ADD_NEW_QUESTION, ADD_VOTE_TO_QUESTION } from \"../actions/questions\"\n\n\n\nfunction questions(state = {}, action) {\n  switch(action.type) {\n    case RECEIVE_QUESTIONS: \n      return {\n        ...state,\n        ...action.questions\n      }\n    case ADD_NEW_QUESTION:\n      const { question } = action\n      return {\n        ...state,\n        [question.id]: question\n      }\n    case ADD_VOTE_TO_QUESTION:\n      const { authedUser, qid, answer } = action\n      return {\n        ...state,\n        [qid]: {\n          ...state[qid],\n          [answer]: {\n            ...state[qid][answer],\n            votes: state[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n    default:\n      return state;\n  }\n}\n\n\nexport default questions","import { RECEIVE_USERS, ADD_QUESTION_TO_USER, ADD_ANSWER_TO_USER } from \"../actions/users\";\n\n\n\nfunction users(state = {}, action) {\n  switch(action.type) {\n    case RECEIVE_USERS:\n      return {\n        ...state,\n        ...action.users\n      }\n    case ADD_QUESTION_TO_USER:\n      const { id, author } = action\n      return {\n        ...state,\n        [author]: {\n          ...state[author],\n          questions: state[author].questions.concat([id])\n        }\n      }\n    case ADD_ANSWER_TO_USER:\n      const { authedUser, qid, answer } = action\n      return {\n        ...state,\n        [authedUser]: {\n          ...state[authedUser],\n          answers: {\n            ...state[authedUser].answers,\n            [qid]: [answer]\n          }\n        }\n      } \n    default:\n      return state\n  }\n}\n\n\nexport default users","import { AUTHED_USER, LOG_USER_OUT } from \"../actions/authedUser\";\n\n\n\n\n\nfunction authedUser(state = null, action) {\n  switch(action.type) {\n    case AUTHED_USER: \n      return action.id\n    case LOG_USER_OUT:\n      return null\n    default:\n      return state\n  }\n}\n\n\nexport default authedUser","import { combineReducers } from \"redux\"\nimport questions from './questions'\nimport users from './users'\nimport authedUser from './authedUser'\n\nexport default combineReducers({\n  questions,\n  users,\n  authedUser,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport middleware from './middleware'\nimport reducers from './reducers'\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport 'semantic-ui-css/semantic.min.css'\n\nconst store = createStore(reducers, middleware)\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}